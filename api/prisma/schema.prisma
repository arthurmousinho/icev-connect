generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  email          String  @unique
  name           String
  username       String  @unique
  hashedPassword String? @map("hashed_password")
  avatarUrl      String  @map("avatar_url")

  role     UserRole     @default(USER)
  isActive Boolean      @default(true) @map("is_active")
  provider AuthProvider @default(GOOGLE)

  articles Article[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Article {
  id String @id @default(cuid())

  title       String
  description String
  content     String
  slug        String @unique

  topics Topic[]

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map("author_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("articles")
}

model Topic {
  id String @id @default(cuid())

  title String    @unique
  slug  String    @unique
  icon  TopicIcon @default(DEFAULT)

  articles Article[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("topics")
}

enum TopicIcon {
  DEFAULT
  ALIGN_LEFT
  BOT
  BRACES
  CPU
  DATABASE
  DATABASE_ZAP
  ETHERNET_PORT
  FILE_TEXT
  GAMEPAD_2
  GLOBE
  LAYERS
  LIST_CHECKS
  MICROCHIP
  MONITOR
  NETWORK
  SMARTPHONE

  @@map("topic_icon")
}

enum UserRole {
  USER
  ADMIN

  @@map("user_role")
}

enum AuthProvider {
  GOOGLE
  CREDENTIALS

  @@map("auth_provider")
}
